import com.panayotis.gnuplot.JavaPlot;
import com.panayotis.gnuplot.swing.JPlot;

import java.awt.*;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.plaf.DimensionUIResource;
import java.awt.event.*;
import java.util.Properties;


public class IS {
    private JProgressBar progressBar1;
    private JSlider slider1;
    private JButton button1;
    private JPanel main;
    private JTextPane textPane1;
    private JPanel Displaypannel;
    private JTable table1;
    private JButton but;
    private Properties prop;
    private JPlot plot = null;
    private int x = 1;

    public Properties getProp() {
        return prop;
    }

    public void setProp(Properties prop) {
        this.prop = prop;
    }



    public IS() {


        prop = bootup.readProperties();

        plot = new JPlot(new JavaPlot(prop.getProperty("gnuplotpath"), true));
        plot.getJavaPlot().addPlot("");

        plot.setPreferredSize(new DimensionUIResource(100, 100));
        Displaypannel = new JPanel();
        Displaypannel.setLayout(new BorderLayout(0, 0));

        Displaypannel.setLayout(new BorderLayout());
        Displaypannel.add(plot, BorderLayout.CENTER);
        plot.plot();
        plot.getJavaPlot().getAxis("x").setBoundaries(0, 100);
        $$$setupUI$$$();
        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                progressBar1.setValue(slider1.getValue());
            }
        });
        slider1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                progressBar1.setValue(slider1.getValue());
                x = slider1.getValue();
                //plot.setJavaPlot(new JavaPlot(prop.getProperty("gnuplotpath"), true));
                plot.getJavaPlot().addPlot("x *" + x);
                plot.plot();
                plot.repaint();
            }
        });


    }




    public void init() {

        prop = null;
        prop = bootup.readProperties();


        //   plot.getJavaPlot().addPlot("x*sin(x)");


            /*JFrame f = new JFrame();
            f.getContentPane().add(plot);
            f.pack();
            f.setLocationRelativeTo(null);
            f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            f.setVisible(true);*/


        JFrame frame = new JFrame("IS");

        // frame.getContentPane().add(plot,BorderLayout.CENTER);
       /*plot.setLayout(new BoxLayout());
        plot.add(Displaypannel, BorderLayout.CENTER);
        plot.setLayout(frame.getLayout());
        plot.add(Displaypannel);*/

        /* BorderLayout borderLayout = new BorderLayout();*/

        //Displaypannel.add(plot,BorderLayout.CENTER);
        frame.setContentPane(new IS().main);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        frame.pack();
        frame.setVisible(true);


        /*JavaPlot p = new JavaPlot(prop.getProperty("gnuplotpath"), true);
        p.addPlot("(sin(x))*(sin(y))");
        p.plot();*/


        bootup.writeProperties(prop);

    }


    private void createUIComponents() {

        // TODO: place custom component creation code here

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        main = new JPanel();
        main.setLayout(new GridBagLayout());
        main.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLoweredBevelBorder(), null));
        slider1 = new JSlider();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        main.add(slider1, gbc);
        button1 = new JButton();
        button1.setText("Button");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        main.add(button1, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridheight = 5;
        gbc.fill = GridBagConstraints.BOTH;
        main.add(scrollPane1, gbc);
        textPane1 = new JTextPane();
        scrollPane1.setViewportView(textPane1);
        progressBar1 = new JProgressBar();
        progressBar1.setIndeterminate(false);
        progressBar1.setStringPainted(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        main.add(progressBar1, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        main.add(Displaypannel, gbc);
        table1 = new JTable();
        table1.setAutoCreateRowSorter(true);
        table1.setToolTipText("table :]");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        main.add(table1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        main.add(spacer1, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }
}



